<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PrimHesaplat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2jHbAAAAAElFTkSuQmCC
</value>
  </data>
</root>